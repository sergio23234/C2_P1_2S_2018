/* Generated By:JavaCC: Do not edit this line. GramaticaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GramaticaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAS = 1;
  /** RegularExpression Id. */
  int MEN = 2;
  /** RegularExpression Id. */
  int POR = 3;
  /** RegularExpression Id. */
  int ELV = 4;
  /** RegularExpression Id. */
  int IGU = 5;
  /** RegularExpression Id. */
  int PAI = 6;
  /** RegularExpression Id. */
  int PAF = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int OR = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int NOR = 11;
  /** RegularExpression Id. */
  int MAY = 12;
  /** RegularExpression Id. */
  int DPUN = 13;
  /** RegularExpression Id. */
  int PUN = 14;
  /** RegularExpression Id. */
  int R_fin = 15;
  /** RegularExpression Id. */
  int MOD = 16;
  /** RegularExpression Id. */
  int DIV = 17;
  /** RegularExpression Id. */
  int ARR = 18;
  /** RegularExpression Id. */
  int NCO = 19;
  /** RegularExpression Id. */
  int COR = 20;
  /** RegularExpression Id. */
  int R_MIMG = 21;
  /** RegularExpression Id. */
  int R_MVID = 22;
  /** RegularExpression Id. */
  int R_MAUD = 23;
  /** RegularExpression Id. */
  int R_repro = 24;
  /** RegularExpression Id. */
  int R_OP = 25;
  /** RegularExpression Id. */
  int C_VF = 26;
  /** RegularExpression Id. */
  int C_SN = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int R_OF = 30;
  /** RegularExpression Id. */
  int R_OI = 31;
  /** RegularExpression Id. */
  int R_CMIN = 32;
  /** RegularExpression Id. */
  int R_CMAX = 33;
  /** RegularExpression Id. */
  int R_CFIL = 34;
  /** RegularExpression Id. */
  int R_Text = 35;
  /** RegularExpression Id. */
  int R_Ente = 36;
  /** RegularExpression Id. */
  int R_Deci = 37;
  /** RegularExpression Id. */
  int R_Rang = 38;
  /** RegularExpression Id. */
  int R_Cond = 39;
  /** RegularExpression Id. */
  int R_Fech = 40;
  /** RegularExpression Id. */
  int R_Hora = 41;
  /** RegularExpression Id. */
  int R_FeHo = 42;
  /** RegularExpression Id. */
  int R_Selu = 43;
  /** RegularExpression Id. */
  int R_Selm = 44;
  /** RegularExpression Id. */
  int R_Nota = 45;
  /** RegularExpression Id. */
  int R_Mult = 46;
  /** RegularExpression Id. */
  int R_Calc = 47;
  /** RegularExpression Id. */
  int R_AgrI = 48;
  /** RegularExpression Id. */
  int R_AgrF = 49;
  /** RegularExpression Id. */
  int R_Cici = 50;
  /** RegularExpression Id. */
  int R_Cicf = 51;
  /** RegularExpression Id. */
  int R_tip = 52;
  /** RegularExpression Id. */
  int R_idp = 53;
  /** RegularExpression Id. */
  int R_eti = 54;
  /** RegularExpression Id. */
  int R_par = 55;
  /** RegularExpression Id. */
  int R_cal = 56;
  /** RegularExpression Id. */
  int R_apl = 57;
  /** RegularExpression Id. */
  int R_sug = 58;
  /** RegularExpression Id. */
  int R_res = 59;
  /** RegularExpression Id. */
  int R_req = 60;
  /** RegularExpression Id. */
  int R_rsm = 61;
  /** RegularExpression Id. */
  int R_rqm = 62;
  /** RegularExpression Id. */
  int R_prd = 63;
  /** RegularExpression Id. */
  int R_rep = 64;
  /** RegularExpression Id. */
  int R_mul = 65;
  /** RegularExpression Id. */
  int R_lec = 66;
  /** RegularExpression Id. */
  int R_apa = 67;
  /** RegularExpression Id. */
  int R_pre = 68;
  /** RegularExpression Id. */
  int R_pos = 69;
  /** RegularExpression Id. */
  int ESPACIO = 73;
  /** RegularExpression Id. */
  int T_ID = 74;
  /** RegularExpression Id. */
  int LETTER = 75;
  /** RegularExpression Id. */
  int INTEGER = 76;
  /** RegularExpression Id. */
  int DOUBLE = 77;
  /** RegularExpression Id. */
  int DIGIT = 78;
  /** RegularExpression Id. */
  int T_MUL = 79;
  /** RegularExpression Id. */
  int T_Texto = 80;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"^\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\"<\"",
    "\">\"",
    "\"..\"",
    "\".\"",
    "\"$/~$\"",
    "\"mod\"",
    "\"div\"",
    "\"@[\"",
    "\"#[\"",
    "\"]\"",
    "\"Media_imagen\"",
    "\"Media_video\"",
    "\"Media_audio\"",
    "\"reproduccion\"",
    "\"Opcion\"",
    "\"V_F\"",
    "\"S_N\"",
    "\"verdadero\"",
    "\"falso\"",
    "\"Finalizar\"",
    "\"Iniciar\"",
    "\"Cad_min\"",
    "\"Cad_max\"",
    "\"Cad_fil\"",
    "\"Texto\"",
    "\"Entero\"",
    "\"Decimal\"",
    "\"Rango\"",
    "\"Condicion\"",
    "\"Fecha\"",
    "\"Hora\"",
    "\"FechaHora\"",
    "\"Seleccion_uno\"",
    "\"Seleccion_multiples\"",
    "\"Nota\"",
    "\"Fichero\"",
    "\"Calcular\"",
    "\"Iniciar agrupacion\"",
    "\"Finalizar agrupacion\"",
    "\"Iniciar Ciclo\"",
    "\"Finalizar Ciclo\"",
    "\"~$tipo~$\"",
    "\"~$idpregunta~$\"",
    "\"~$etiqueta~$\"",
    "\"~$parametro~$\"",
    "\"~$calculo~$\"",
    "\"~$aplicable~$\"",
    "\"~$sugerir~$\"",
    "\"~$restringir~$\"",
    "\"~$requerido~$\"",
    "\"~$restringirmsn~$\"",
    "\"~$requeridomsn~$\"",
    "\"~$predeterminado~$\"",
    "\"~$repeticion~$\"",
    "\"~$multimedia~$\"",
    "\"~$lectura~$\"",
    "\"~$apariencia~$\"",
    "\"~$codigo_pre~$\"",
    "\"~$codigo_post~$\"",
    "\"\\ufeff\"",
    "\"\\r\"",
    "\"\\n\"",
    "<ESPACIO>",
    "<T_ID>",
    "<LETTER>",
    "<INTEGER>",
    "<DOUBLE>",
    "<DIGIT>",
    "<T_MUL>",
    "<T_Texto>",
  };

}
