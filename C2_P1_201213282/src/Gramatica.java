/* Gramatica.java */
/* Generated By:JavaCC: Do not edit this line. Gramatica.java */
import java.util.Stack;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileNotFoundException;

public class Gramatica implements GramaticaConstants {
    Stack<Nodo_Arbol> Pila = new Stack();
    Nodo_Arbol primero = new Nodo_Arbol();
    public void Gramatica(String arg){
    try{
     System.out.println("entro");
     primero.set_ID("~$RAIZ~$");
     Gramatica parser = new Gramatica(new BufferedReader(new FileReader("path.txt")));
     parser.Inicio(primero);
    }
    catch(FileNotFoundException e)
    {

      System.out.println(e.getMessage());

      System.out.println("Analizador: Se han encontrado errores en el analisis.");
    }
    catch(ParseException e){
      System.out.println("Analizador: Se han encontrado errores en el analisis.");
        System.out.println(e.getMessage()+"1\u005cn"+e.currentToken+"2\u005cn"+e.eol+"3\u005cn");
    }
  }

  final public Nodo_Arbol Inicio(Nodo_Arbol arbol) throws ParseException {
    Contenido(arbol);
{if ("" != null) return arbol;}
    throw new Error("Missing return statement in function");
  }

  final public void Contenido(Nodo_Arbol arbol) throws ParseException {Nodo_Arbol arbol_1 = new Nodo_Arbol();
Pila.push(arbol);
    ContenidoP();
    label_1:
    while (true) {
      if (jj_2_1(100)) {
        ;
      } else {
        break label_1;
      }
      ContenidoP();
System.out.println("trololo");
    }

  }

  final public void ContenidoP() throws ParseException {Nodo_Arbol arbol_1 = new Nodo_Arbol();
    jj_consume_token(R_tip);
    Inicial_Cont(arbol_1);
Pila.peek().Add_Nodo_Arbol(arbol_1);
if(arbol_1.get_anidado()!=0){
    if(arbol_1.get_anidado()==1){
        Pila.push(arbol_1);

    }
    else if(arbol_1.get_anidado()<0){
        System.out.println("salida");
        Pila.pop();

        }
    }
   // ContenidoP();

  }

  final public void Inicial_Cont(Nodo_Arbol arbol) throws ParseException {
    Cuerpo_Tipo(arbol);
    Estruct_ID(arbol);

  }

/*--------------- Cuerpo Tipo---------------- */
  final public void Cuerpo_Tipo(Nodo_Arbol actual) throws ParseException {String valor ="";
 Token val;
    if (jj_2_2(100)) {
      val = jj_consume_token(R_Text);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_3(100)) {
      val = jj_consume_token(R_Ente);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_4(100)) {
      val = jj_consume_token(R_Deci);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_5(100)) {
      val = jj_consume_token(R_Rang);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_6(100)) {
      val = jj_consume_token(R_Cond);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_7(100)) {
      val = jj_consume_token(R_Fech);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_8(100)) {
      val = jj_consume_token(R_Hora);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_9(100)) {
      val = jj_consume_token(R_FeHo);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_10(100)) {
      val = jj_consume_token(R_Selu);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_11(100)) {
      val = jj_consume_token(R_Selm);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_12(100)) {
      val = jj_consume_token(R_Nota);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_13(100)) {
      val = jj_consume_token(R_Mult);
actual.set_tipo(val.image);
      Cuerpo_mul(actual);
      jj_consume_token(R_fin);

    } else if (jj_2_14(100)) {
      val = jj_consume_token(R_Calc);
      jj_consume_token(R_fin);
actual.set_tipo(val.image);
    } else if (jj_2_15(100)) {
      val = jj_consume_token(R_AgrI);
      jj_consume_token(R_fin);
actual.set_tipo(val.image); actual.set_agrupacion(1);
    } else if (jj_2_16(100)) {
      val = jj_consume_token(R_AgrF);
      jj_consume_token(R_fin);
actual.set_tipo(val.image); actual.set_agrupacion(-1);
    } else if (jj_2_17(100)) {
      val = jj_consume_token(R_Cici);
      jj_consume_token(R_fin);
actual.set_tipo(val.image); actual.set_ciclo(1);
    } else if (jj_2_18(100)) {
      val = jj_consume_token(R_Cicf);
      jj_consume_token(R_fin);
actual.set_tipo(val.image); actual.set_ciclo(-1);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Cuerpo_mul(Nodo_Arbol actual) throws ParseException {Token t;
    if (jj_2_19(100)) {
      t = jj_consume_token(T_MUL);
actual.Set_fichero(t.image);
    } else if (jj_2_20(100)) {
      jj_consume_token(0);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*--------------- Estructura ID---------------- */
  final public void Estruct_ID(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_idp);
    Cuerpo_ID(actual);
    Est_eti(actual);
  }

  final public void Cuerpo_ID(Nodo_Arbol actual) throws ParseException {Token ID;
    ID = jj_consume_token(T_ID);
    jj_consume_token(R_fin);
String imagen = ID.image; actual.set_ID(imagen);
  }

/*--------------- Estructura etiqueta---------------- */
  final public void Est_eti(Nodo_Arbol actual) throws ParseException {String etiqueta="";
    jj_consume_token(R_eti);
    etiqueta = Etiqueta_ET();
    jj_consume_token(R_fin);
actual.Set_etiqueta(etiqueta);
    Est_param(actual);
  }

/*--------------- Estructura PARAMETRO---------------- */
  final public void Est_param(Nodo_Arbol actual) throws ParseException {Token t;
    t = jj_consume_token(R_par);
    Cuerpo_param(actual);
    Est_calcular(actual);
  }

  final public void Cuerpo_param(Nodo_Arbol actual) throws ParseException {String Respuesta="";
    Token t;
    if (jj_2_26(100)) {
      jj_consume_token(R_fin);

    } else if (jj_2_27(100)) {
      t = jj_consume_token(R_OP);
      jj_consume_token(IGU);
      PARAM1(actual);
    } else if (jj_2_28(100)) {
      t = jj_consume_token(R_OI);
      jj_consume_token(IGU);
      Respuesta = EXP_AR();
actual.add_rango_min(Respuesta);
      label_2:
      while (true) {
        PARAM2(actual);
        if (jj_2_21(100)) {
          ;
        } else {
          break label_2;
        }
      }
    } else if (jj_2_29(100)) {
      t = jj_consume_token(R_OF);
      jj_consume_token(IGU);
      Respuesta = EXP_AR();
actual.add_rango_max(Respuesta);
      label_3:
      while (true) {
        PARAM2(actual);
        if (jj_2_22(100)) {
          ;
        } else {
          break label_3;
        }
      }
    } else if (jj_2_30(100)) {
      t = jj_consume_token(R_CMIN);
      jj_consume_token(IGU);
      Respuesta = EXP_AR();
actual.add_cad_min(Respuesta);
      label_4:
      while (true) {
        PARAM3(actual);
        if (jj_2_23(100)) {
          ;
        } else {
          break label_4;
        }
      }
    } else if (jj_2_31(100)) {
      t = jj_consume_token(R_CMAX);
      jj_consume_token(IGU);
      Respuesta = EXP_AR();
actual.add_cad_max(Respuesta);
      label_5:
      while (true) {
        PARAM3(actual);
        if (jj_2_24(100)) {
          ;
        } else {
          break label_5;
        }
      }
    } else if (jj_2_32(100)) {
      t = jj_consume_token(R_CFIL);
      jj_consume_token(IGU);
      Respuesta = EXP_AR();
actual.add_cad_fil(Respuesta);
      label_6:
      while (true) {
        PARAM3(actual);
        if (jj_2_25(100)) {
          ;
        } else {
          break label_6;
        }
      }
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

//parametro1 V_F o S_N
  final public void PARAM1(Nodo_Arbol actual) throws ParseException {
    if (jj_2_33(100)) {
      jj_consume_token(C_SN);
      jj_consume_token(R_fin);
actual.add_opc(1);
    } else if (jj_2_34(100)) {
      jj_consume_token(C_VF);
      jj_consume_token(R_fin);
actual.add_opc(0);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void PARAM2(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_35(100)) {
      jj_consume_token(R_OF);
      jj_consume_token(IGU);
      resultado = EXP_AR();
actual.add_rango_max(resultado);
      PARAM2(actual);
    } else if (jj_2_36(100)) {
      jj_consume_token(R_OI);
      jj_consume_token(IGU);
      resultado = EXP_AR();
actual.add_rango_min(resultado);
      PARAM2(actual);
    } else if (jj_2_37(100)) {
      jj_consume_token(R_fin);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

//parametro de texto
  final public void PARAM3(Nodo_Arbol actual) throws ParseException {String resultado ="";
    if (jj_2_38(100)) {
      jj_consume_token(R_CMIN);
      jj_consume_token(IGU);
      resultado = EXP_AR();
actual.add_cad_min(resultado);
    } else if (jj_2_39(100)) {
      jj_consume_token(R_CMAX);
      jj_consume_token(IGU);
      resultado = EXP_AR();
actual.add_cad_max(resultado);
    } else if (jj_2_40(100)) {
      jj_consume_token(R_CFIL);
      jj_consume_token(IGU);
      resultado = EXP_AR();
actual.add_cad_fil(resultado);
    } else if (jj_2_41(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION CALCULAR-----------------------------------*/
  final public void Est_calcular(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_cal);
    Cuerpo_calcular(actual);
    Est_aplicable(actual);
  }

  final public void Cuerpo_calcular(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_42(100)) {
      resultado = EXP_LOG();
actual.Set_calcular(resultado);
    } else if (jj_2_43(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Aplicable-----------------------------------*/
  final public void Est_aplicable(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_apl);
    Cuerpo_apli(actual);
    Est_sugerir(actual);
  }

  final public void Cuerpo_apli(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_44(100)) {
      resultado = EXP_COMP();
      jj_consume_token(R_fin);
actual.set_aplicable(resultado);
    } else if (jj_2_45(100)) {
      jj_consume_token(R_fin);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Sugerir-----------------------------------*/
  final public void Est_sugerir(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_sug);
    Cuerpo_suger(actual);
    Est_restrin(actual);
  }

  final public void Cuerpo_suger(Nodo_Arbol actual) throws ParseException {String mensaje="";
    if (jj_2_46(100)) {
      mensaje = Etiqueta_ET();
      jj_consume_token(R_fin);
actual.set_sugerir(mensaje);
    } else if (jj_2_47(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Restringir-----------------------------------*/
  final public void Est_restrin(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_res);
System.out.println("encontro primero");
    Cuerpo_restringir(actual);
    Est_requerido(actual);
  }

  final public void Cuerpo_restringir(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_48(100)) {
      resultado = EXP_COMP();
      jj_consume_token(R_fin);
actual.set_restringir(resultado);
    } else if (jj_2_49(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Requerido-----------------------------------*/
  final public void Est_requerido(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_req);
    Cuerpo_requerido(actual);
    Est_restrimen(actual);
  }

  final public void Cuerpo_requerido(Nodo_Arbol actual) throws ParseException {
    if (jj_2_50(100)) {
      jj_consume_token(TRUE);
      jj_consume_token(R_fin);
actual.set_requerido();
    } else if (jj_2_51(100)) {
      jj_consume_token(FALSE);
      jj_consume_token(R_fin);

    } else if (jj_2_52(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Restringir mensaje-----------------------------------*/
  final public void Est_restrimen(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_rsm);
    Cuerpo_resmensaje(actual);
    Est_resquemen(actual);
  }

  final public void Cuerpo_resmensaje(Nodo_Arbol actual) throws ParseException {String mensaje="";
    if (jj_2_53(100)) {
      mensaje = Etiqueta_ET();
      jj_consume_token(R_fin);
actual.set_men_rest(mensaje);
    } else if (jj_2_54(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Requerido mensaje-----------------------------------*/
  final public void Est_resquemen(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_rqm);
    cuerpo_requemen(actual);
    Est_predeter(actual);
  }

  final public void cuerpo_requemen(Nodo_Arbol actual) throws ParseException {String mensaje="";
    if (jj_2_55(100)) {
      mensaje = Etiqueta_ET();
      jj_consume_token(R_fin);
actual.set_men_reque(mensaje);
    } else if (jj_2_56(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION Predeterminado-----------------------------------*/
  final public void Est_predeter(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_prd);
    Cuerpo_prede(actual);
    Est_repetir(actual);
  }

  final public void Cuerpo_prede(Nodo_Arbol actual) throws ParseException {String resultado=""; Token t;
    if (jj_2_57(100)) {
      resultado = EXP_LOG();
      jj_consume_token(R_fin);
actual.set_predeterminado(resultado);
    } else if (jj_2_58(100)) {
      t = jj_consume_token(T_ID);
      jj_consume_token(PAI);
      jj_consume_token(PAF);
      jj_consume_token(R_fin);
actual.set_predeterminado(t.image+"()");
    } else if (jj_2_59(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION repetir-----------------------------------*/
  final public void Est_repetir(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_rep);
    Cuerpo_repetir(actual);
    Est_apariencia(actual);
  }

  final public void Cuerpo_repetir(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_60(100)) {
      resultado = EXP_AR();
actual.add_repetir(resultado);
    } else if (jj_2_61(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION apariencia-----------------------------------*/
  final public void Est_apariencia(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_apa);
    Cuerpo_aparien(actual);
    Est_Lectura(actual);
  }

  final public void Cuerpo_aparien(Nodo_Arbol actual) throws ParseException {Token t;
    if (jj_2_62(100)) {
      t = jj_consume_token(T_ID);
      jj_consume_token(R_fin);
actual.set_apariencia(t.image);
    } else if (jj_2_63(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION lectura-----------------------------------*/
  final public void Est_Lectura(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_lec);
    Cuerpo_lectura(actual);
    Est_multimed(actual);
  }

  final public void Cuerpo_lectura(Nodo_Arbol actual) throws ParseException {String resultado="";
    if (jj_2_64(100)) {
      jj_consume_token(TRUE);
      jj_consume_token(R_fin);
actual.Set_lectura("verdadero");
    } else if (jj_2_65(100)) {
      jj_consume_token(FALSE);
      jj_consume_token(R_fin);
actual.Set_lectura("falso");
    } else if (jj_2_66(100)) {
      resultado = EXP_AR();
      jj_consume_token(R_fin);
actual.Set_lectura(resultado);
    } else if (jj_2_67(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*------------------------OPERACION multimedia-----------------------------------*/
  final public void Est_multimed(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_mul);
    Cuerpo_multimed(actual);
    Est_codigoPRE(actual);
  }

  final public void Cuerpo_multimed(Nodo_Arbol actual) throws ParseException {String resultado="";
 Token t;
    if (jj_2_68(100)) {
      jj_consume_token(R_MIMG);
      t = jj_consume_token(T_MUL);
actual.Set_multimedia(t.image,0);
      Cuerpo_multimed(actual);
    } else if (jj_2_69(100)) {
      jj_consume_token(R_MAUD);
      t = jj_consume_token(T_MUL);
actual.Set_multimedia(t.image,0);
      Cuerpo_multimed(actual);
    } else if (jj_2_70(100)) {
      jj_consume_token(R_MVID);
      t = jj_consume_token(T_MUL);
actual.Set_multimedia(t.image,0);
      Cuerpo_multimed(actual);
    } else if (jj_2_71(100)) {
      jj_consume_token(R_repro);
      jj_consume_token(IGU);
      resultado = Cuerpo_RE(actual);
actual.Set_automul(resultado);
      Cuerpo_multimed(actual);
    } else if (jj_2_72(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public String Cuerpo_RE(Nodo_Arbol actual) throws ParseException {
    if (jj_2_73(100)) {
      jj_consume_token(TRUE);
{if ("" != null) return "verdadero";}
    } else if (jj_2_74(100)) {
      jj_consume_token(FALSE);
{if ("" != null) return "falso";}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

/*------------------------OPERACION Codigo PRE-----------------------------------*/
  final public void Est_codigoPRE(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_pre);
    Cuerpo_pre(actual);
    Est_codigoPOST(actual);
  }

  final public void Cuerpo_pre(Nodo_Arbol actual) throws ParseException {String mensaje="";
    if (jj_2_75(100)) {
      mensaje = Etiqueta_ET();
      jj_consume_token(R_fin);
actual.set_codigoPRE(mensaje);
    } else if (jj_2_76(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Est_codigoPOST(Nodo_Arbol actual) throws ParseException {
    jj_consume_token(R_pos);
    Cuerpo_post(actual);
  }

  final public void Cuerpo_post(Nodo_Arbol actual) throws ParseException {String mensaje="";
    if (jj_2_77(100)) {
      mensaje = Etiqueta_ET();
      jj_consume_token(R_fin);
actual.set_codigoPOS(mensaje);
    } else if (jj_2_78(100)) {
      jj_consume_token(R_fin);

    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

/*---------------------Operaciones Aritmeticas---------------------- */
  final public String EXP_AR() throws ParseException {String resultado="";
 String var1="";
    var1 = Est_MD();
    label_7:
    while (true) {
      if (jj_2_79(100)) {
        ;
      } else {
        break label_7;
      }
      resultado = EXP_ARP();
var1=var1+resultado;
    }
{if ("" != null) return var1;}
    throw new Error("Missing return statement in function");
  }

  final public String EXP_ARP() throws ParseException {String resultado="";
 String var1="";
    if (jj_2_80(100)) {
      jj_consume_token(MAS);
      var1 = Est_MD();
var1="+"+var1; {if ("" != null) return var1;}
    } else if (jj_2_81(100)) {
      jj_consume_token(MEN);
      var1 = Est_MD();
var1="-"+var1; {if ("" != null) return var1;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public String Est_MD() throws ParseException {String resultado="";
    String var1="";
    var1 = Est_ID();
    label_8:
    while (true) {
      if (jj_2_82(100)) {
        ;
      } else {
        break label_8;
      }
      resultado = Est_MDP();
var1= var1+resultado;
    }
{if ("" != null) return var1;}
    throw new Error("Missing return statement in function");
  }

  final public String Est_MDP() throws ParseException {String resultado="";
 String var1="";
    if (jj_2_83(100)) {
      jj_consume_token(POR);
      var1 = Est_ID();
var1="*"+var1; {if ("" != null) return var1;}
    } else if (jj_2_84(100)) {
      jj_consume_token(DIV);
      var1 = Est_ID();
var1="/"+var1; {if ("" != null) return var1;}
    } else if (jj_2_85(100)) {
      jj_consume_token(MOD);
      var1 = Est_ID();
var1="%"+var1; {if ("" != null) return var1;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public String Est_ID() throws ParseException {String resultado="";
    if (jj_2_86(100)) {
      jj_consume_token(PAI);
      resultado = EXP_AR();
      jj_consume_token(PAF);
{if ("" != null) return "("+resultado+")";}
    } else if (jj_2_87(100)) {
      resultado = Var_ID();
{if ("" != null) return resultado;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

/*---------------------Operaciones de Logias---------------------- */
  final public String EXP_LOG() throws ParseException {String resultado="";
    String var1="";
System.out.println("encontro esto1");
    var1 = Est_NOT();
    label_9:
    while (true) {
      if (jj_2_88(100)) {
        ;
      } else {
        break label_9;
      }
      resultado = EXP_LOGP();
var1=var1+resultado;
    }
{if ("" != null) return var1;}
    throw new Error("Missing return statement in function");
  }

  final public String EXP_LOGP() throws ParseException {String resultado="";
    String var1="";
    if (jj_2_89(100)) {
      jj_consume_token(AND);
      var1 = Est_NOT();
resultado="&&"+var1; {if ("" != null) return resultado;}
    } else if (jj_2_90(100)) {
      jj_consume_token(OR);
      var1 = Est_NOT();
resultado="||"+var1; {if ("" != null) return resultado;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public String Est_NOT() throws ParseException {String resultado="";
    if (jj_2_91(100)) {
      jj_consume_token(NOT);
      resultado = EXP_LOG();
{if ("" != null) return "!"+resultado;}
    } else if (jj_2_92(100)) {
System.out.println("encontro esto2");
      resultado = EXP_COMP();
{if ("" != null) return resultado;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

/*---------------------Operaciones de Comparadores---------------------- */
  final public String EXP_COMP() throws ParseException {String resultado="";
    String var1="";
    resultado = EXP_COMP3();
    label_10:
    while (true) {
      if (jj_2_93(100)) {
        ;
      } else {
        break label_10;
      }
      var1 = EXP_COMPP();
resultado=resultado+var1;
    }
{if ("" != null) return resultado;}
    throw new Error("Missing return statement in function");
  }

  final public String EXP_COMPP() throws ParseException {String resultado="";
    String var1="";
    String var2="";
    String var3="";
    if (jj_2_96(100)) {
      jj_consume_token(IGU);
      EXP_COMP3();
resultado = "=="+var2; {if ("" != null) return resultado;}
    } else if (jj_2_97(100)) {
      jj_consume_token(NOT);
      jj_consume_token(IGU);
      var2 = EXP_COMP3();
resultado = "!="+var2; {if ("" != null) return resultado;}
    } else if (jj_2_98(100)) {
      jj_consume_token(NOR);
      if (jj_2_94(100)) {
        var1 = COMP2();
var3="=";
      } else {
        ;
      }
      var2 = EXP_COMP3();
String pre_res ="<"+var3; resultado = pre_res+var2; {if ("" != null) return resultado;}
    } else if (jj_2_99(100)) {
      jj_consume_token(MAY);
      if (jj_2_95(100)) {
        var1 = COMP2();
var3="=";
      } else {
        ;
      }
      var2 = EXP_COMP3();
String pre_res =">"+var3; resultado = pre_res+var2; {if ("" != null) return resultado;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public String COMP2() throws ParseException {
    jj_consume_token(IGU);
{if ("" != null) return "=";}
    throw new Error("Missing return statement in function");
  }

  final public String EXP_COMP3() throws ParseException {String resultado="";
    resultado = EXP_AR();
{if ("" != null) return resultado;}
    throw new Error("Missing return statement in function");
  }

/*---------------------Propuesta de ID---------------------- */
  final public String Etiqueta_ET() throws ParseException {String Cad;String total="";
    jj_consume_token(T_Texto2);
    total = T();
    Cad = Etiqueta_ET1();
total = total+Cad; {if ("" != null) return total;}
    throw new Error("Missing return statement in function");
  }

  final public String Etiqueta_ET1() throws ParseException {String Cad;String total="";
    if (jj_2_101(100)) {
      Cad = T();
      label_11:
      while (true) {
        if (jj_2_100(100)) {
          ;
        } else {
          break label_11;
        }
        total = Etiqueta_ET1();
total=Cad+total;
      }
{if ("" != null) return total;}
    } else if (jj_2_102(100)) {
      jj_consume_token(T_Coma);
{if ("" != null) return "";}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

//total=Etiqueta_ET1()
  final public String T() throws ParseException {Token t;
System.out.println("entro al ciclo T");
    if (jj_2_104(100)) {
      t = jj_consume_token(T_var);
{if ("" != null) return t.image;}
    } else if (jj_2_105(100)) {
      t = jj_consume_token(T_Texto);
{if ("" != null) return t.image;}
    } else if (jj_2_106(100)) {
      t = jj_consume_token(INTEGER);
{if ("" != null) return t.image;}
    } else if (jj_2_107(100)) {
      t = jj_consume_token(PUNTO);
      if (jj_2_103(100)) {
        jj_consume_token(PUNTO);
      } else {
        ;
      }
{if ("" != null) return "yo ";}
    } else if (jj_2_108(100)) {
      t = jj_consume_token(DOUBLE);
{if ("" != null) return t.image;}
    } else if (jj_2_109(100)) {
      t = jj_consume_token(T_Estilo);
System.out.println("llego a estilo");{if ("" != null) return t.image;}
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

/*------------------------VAR ID---------------------------------*/
  final public String Var_ID() throws ParseException {Token t;
String var;
System.out.println("llego aqui");
    var = T();
{if ("" != null) return var;}
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_2_13(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private boolean jj_2_14(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private boolean jj_2_15(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private boolean jj_2_16(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private boolean jj_2_17(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private boolean jj_2_18(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private boolean jj_2_19(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private boolean jj_2_20(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private boolean jj_2_21(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private boolean jj_2_22(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private boolean jj_2_23(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private boolean jj_2_24(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private boolean jj_2_25(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private boolean jj_2_26(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private boolean jj_2_27(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private boolean jj_2_28(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private boolean jj_2_29(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private boolean jj_2_30(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private boolean jj_2_31(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private boolean jj_2_32(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private boolean jj_2_33(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private boolean jj_2_34(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private boolean jj_2_35(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private boolean jj_2_36(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private boolean jj_2_37(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private boolean jj_2_38(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private boolean jj_2_39(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private boolean jj_2_40(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private boolean jj_2_41(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private boolean jj_2_42(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private boolean jj_2_43(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private boolean jj_2_44(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private boolean jj_2_45(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_45(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private boolean jj_2_46(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_46(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private boolean jj_2_47(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_47(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private boolean jj_2_48(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_48(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private boolean jj_2_49(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_49(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private boolean jj_2_50(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_50(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private boolean jj_2_51(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_51(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private boolean jj_2_52(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_52(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private boolean jj_2_53(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_53(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private boolean jj_2_54(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_54(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private boolean jj_2_55(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_55(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private boolean jj_2_56(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_56(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private boolean jj_2_57(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_57(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private boolean jj_2_58(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_58(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private boolean jj_2_59(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_59(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private boolean jj_2_60(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_60(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private boolean jj_2_61(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_61(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(60, xla); }
  }

  private boolean jj_2_62(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_62(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(61, xla); }
  }

  private boolean jj_2_63(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_63(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(62, xla); }
  }

  private boolean jj_2_64(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_64(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(63, xla); }
  }

  private boolean jj_2_65(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_65(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(64, xla); }
  }

  private boolean jj_2_66(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_66(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(65, xla); }
  }

  private boolean jj_2_67(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_67(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(66, xla); }
  }

  private boolean jj_2_68(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_68(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(67, xla); }
  }

  private boolean jj_2_69(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_69(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(68, xla); }
  }

  private boolean jj_2_70(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_70(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(69, xla); }
  }

  private boolean jj_2_71(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_71(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(70, xla); }
  }

  private boolean jj_2_72(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_72(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(71, xla); }
  }

  private boolean jj_2_73(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_73(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(72, xla); }
  }

  private boolean jj_2_74(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_74(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(73, xla); }
  }

  private boolean jj_2_75(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_75(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(74, xla); }
  }

  private boolean jj_2_76(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_76(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(75, xla); }
  }

  private boolean jj_2_77(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_77(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(76, xla); }
  }

  private boolean jj_2_78(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_78(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(77, xla); }
  }

  private boolean jj_2_79(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_79(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(78, xla); }
  }

  private boolean jj_2_80(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_80(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(79, xla); }
  }

  private boolean jj_2_81(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_81(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(80, xla); }
  }

  private boolean jj_2_82(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_82(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(81, xla); }
  }

  private boolean jj_2_83(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_83(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(82, xla); }
  }

  private boolean jj_2_84(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_84(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(83, xla); }
  }

  private boolean jj_2_85(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_85(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(84, xla); }
  }

  private boolean jj_2_86(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_86(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(85, xla); }
  }

  private boolean jj_2_87(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_87(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(86, xla); }
  }

  private boolean jj_2_88(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_88(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(87, xla); }
  }

  private boolean jj_2_89(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_89(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(88, xla); }
  }

  private boolean jj_2_90(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_90(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(89, xla); }
  }

  private boolean jj_2_91(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_91(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(90, xla); }
  }

  private boolean jj_2_92(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_92(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(91, xla); }
  }

  private boolean jj_2_93(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_93(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(92, xla); }
  }

  private boolean jj_2_94(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_94(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(93, xla); }
  }

  private boolean jj_2_95(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_95(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(94, xla); }
  }

  private boolean jj_2_96(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_96(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(95, xla); }
  }

  private boolean jj_2_97(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_97(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(96, xla); }
  }

  private boolean jj_2_98(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_98(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(97, xla); }
  }

  private boolean jj_2_99(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_99(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(98, xla); }
  }

  private boolean jj_2_100(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_100(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(99, xla); }
  }

  private boolean jj_2_101(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_101(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(100, xla); }
  }

  private boolean jj_2_102(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_102(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(101, xla); }
  }

  private boolean jj_2_103(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_103(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(102, xla); }
  }

  private boolean jj_2_104(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_104(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(103, xla); }
  }

  private boolean jj_2_105(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_105(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(104, xla); }
  }

  private boolean jj_2_106(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_106(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(105, xla); }
  }

  private boolean jj_2_107(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_107(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(106, xla); }
  }

  private boolean jj_2_108(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_108(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(107, xla); }
  }

  private boolean jj_2_109(int xla)
 {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_109(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(108, xla); }
  }

  private boolean jj_3_54()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_53()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_53()) {
    jj_scanpos = xsp;
    if (jj_3_54()) return true;
    }
    return false;
  }

  private boolean jj_3_53()
 {
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_52()
 {
    if (jj_scan_token(R_rsm)) return true;
    if (jj_3R_53()) return true;
    if (jj_3R_54()) return true;
    return false;
  }

  private boolean jj_3_52()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_51()
 {
    if (jj_scan_token(FALSE)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_51()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_50()) {
    jj_scanpos = xsp;
    if (jj_3_51()) {
    jj_scanpos = xsp;
    if (jj_3_52()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_50()
 {
    if (jj_scan_token(TRUE)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_25()
 {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3R_50()
 {
    if (jj_scan_token(R_req)) return true;
    if (jj_3R_51()) return true;
    if (jj_3R_52()) return true;
    return false;
  }

  private boolean jj_3_24()
 {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3_23()
 {
    if (jj_3R_15()) return true;
    return false;
  }

  private boolean jj_3_22()
 {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3_21()
 {
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3R_49()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_48()) {
    jj_scanpos = xsp;
    if (jj_3_49()) return true;
    }
    return false;
  }

  private boolean jj_3_49()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_48()
 {
    if (jj_3R_19()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_48()
 {
    if (jj_scan_token(R_res)) return true;
    if (jj_3R_49()) return true;
    if (jj_3R_50()) return true;
    return false;
  }

  private boolean jj_3_47()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_47()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_46()) {
    jj_scanpos = xsp;
    if (jj_3_47()) return true;
    }
    return false;
  }

  private boolean jj_3_46()
 {
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_46()
 {
    if (jj_scan_token(R_sug)) return true;
    if (jj_3R_47()) return true;
    if (jj_3R_48()) return true;
    return false;
  }

  private boolean jj_3_45()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_44()
 {
    if (jj_3R_19()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_45()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_44()) {
    jj_scanpos = xsp;
    if (jj_3_45()) return true;
    }
    return false;
  }

  private boolean jj_3R_44()
 {
    if (jj_scan_token(R_apl)) return true;
    if (jj_3R_45()) return true;
    if (jj_3R_46()) return true;
    return false;
  }

  private boolean jj_3_43()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_42()
 {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_43()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_42()) {
    jj_scanpos = xsp;
    if (jj_3_43()) return true;
    }
    return false;
  }

  private boolean jj_3R_42()
 {
    if (jj_scan_token(R_cal)) return true;
    if (jj_3R_43()) return true;
    if (jj_3R_44()) return true;
    return false;
  }

  private boolean jj_3_41()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_40()
 {
    if (jj_scan_token(R_CFIL)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3_39()
 {
    if (jj_scan_token(R_CMAX)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3_38()
 {
    if (jj_scan_token(R_CMIN)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_15()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_38()) {
    jj_scanpos = xsp;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3_40()) {
    jj_scanpos = xsp;
    if (jj_3_41()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_37()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_36()
 {
    if (jj_scan_token(R_OI)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3_35()
 {
    if (jj_scan_token(R_OF)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    if (jj_3R_14()) return true;
    return false;
  }

  private boolean jj_3R_14()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_35()) {
    jj_scanpos = xsp;
    if (jj_3_36()) {
    jj_scanpos = xsp;
    if (jj_3_37()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_34()
 {
    if (jj_scan_token(C_VF)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_33()
 {
    if (jj_scan_token(C_SN)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_16()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_33()) {
    jj_scanpos = xsp;
    if (jj_3_34()) return true;
    }
    return false;
  }

  private boolean jj_3_32()
 {
    if (jj_scan_token(R_CFIL)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    Token xsp;
    if (jj_3_25()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_25()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_31()
 {
    if (jj_scan_token(R_CMAX)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    Token xsp;
    if (jj_3_24()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_24()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_30()
 {
    if (jj_scan_token(R_CMIN)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    Token xsp;
    if (jj_3_23()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_23()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_29()
 {
    if (jj_scan_token(R_OF)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    Token xsp;
    if (jj_3_22()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_22()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_28()
 {
    if (jj_scan_token(R_OI)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_17()) return true;
    Token xsp;
    if (jj_3_21()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_21()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_27()
 {
    if (jj_scan_token(R_OP)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_16()) return true;
    return false;
  }

  private boolean jj_3_26()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_41()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_26()) {
    jj_scanpos = xsp;
    if (jj_3_27()) {
    jj_scanpos = xsp;
    if (jj_3_28()) {
    jj_scanpos = xsp;
    if (jj_3_29()) {
    jj_scanpos = xsp;
    if (jj_3_30()) {
    jj_scanpos = xsp;
    if (jj_3_31()) {
    jj_scanpos = xsp;
    if (jj_3_32()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_40()
 {
    if (jj_scan_token(R_par)) return true;
    if (jj_3R_41()) return true;
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3R_39()
 {
    if (jj_scan_token(R_eti)) return true;
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    if (jj_3R_40()) return true;
    return false;
  }

  private boolean jj_3R_38()
 {
    if (jj_scan_token(T_ID)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_37()
 {
    if (jj_scan_token(R_idp)) return true;
    if (jj_3R_38()) return true;
    if (jj_3R_39()) return true;
    return false;
  }

  private boolean jj_3_20()
 {
    if (jj_scan_token(0)) return true;
    return false;
  }

  private boolean jj_3_19()
 {
    if (jj_scan_token(T_MUL)) return true;
    return false;
  }

  private boolean jj_3R_13()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_19()) {
    jj_scanpos = xsp;
    if (jj_3_20()) return true;
    }
    return false;
  }

  private boolean jj_3_18()
 {
    if (jj_scan_token(R_Cicf)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_17()
 {
    if (jj_scan_token(R_Cici)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_16()
 {
    if (jj_scan_token(R_AgrF)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_15()
 {
    if (jj_scan_token(R_AgrI)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_14()
 {
    if (jj_scan_token(R_Calc)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_13()
 {
    if (jj_scan_token(R_Mult)) return true;
    if (jj_3R_13()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_12()
 {
    if (jj_scan_token(R_Nota)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_11()
 {
    if (jj_scan_token(R_Selm)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_10()
 {
    if (jj_scan_token(R_Selu)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_9()
 {
    if (jj_scan_token(R_FeHo)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_8()
 {
    if (jj_scan_token(R_Hora)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_7()
 {
    if (jj_scan_token(R_Fech)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_6()
 {
    if (jj_scan_token(R_Cond)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_5()
 {
    if (jj_scan_token(R_Rang)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_4()
 {
    if (jj_scan_token(R_Deci)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_3()
 {
    if (jj_scan_token(R_Ente)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_103()
 {
    if (jj_scan_token(PUNTO)) return true;
    return false;
  }

  private boolean jj_3_2()
 {
    if (jj_scan_token(R_Text)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_36()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_2()) {
    jj_scanpos = xsp;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) {
    jj_scanpos = xsp;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) {
    jj_scanpos = xsp;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3_10()) {
    jj_scanpos = xsp;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3_12()) {
    jj_scanpos = xsp;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) {
    jj_scanpos = xsp;
    if (jj_3_15()) {
    jj_scanpos = xsp;
    if (jj_3_16()) {
    jj_scanpos = xsp;
    if (jj_3_17()) {
    jj_scanpos = xsp;
    if (jj_3_18()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_27()
 {
    if (jj_3R_34()) return true;
    return false;
  }

  private boolean jj_3_1()
 {
    if (jj_3R_12()) return true;
    return false;
  }

  private boolean jj_3_109()
 {
    if (jj_scan_token(T_Estilo)) return true;
    return false;
  }

  private boolean jj_3R_35()
 {
    if (jj_3R_36()) return true;
    if (jj_3R_37()) return true;
    return false;
  }

  private boolean jj_3_108()
 {
    if (jj_scan_token(DOUBLE)) return true;
    return false;
  }

  private boolean jj_3_107()
 {
    if (jj_scan_token(PUNTO)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_103()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3_106()
 {
    if (jj_scan_token(INTEGER)) return true;
    return false;
  }

  private boolean jj_3_105()
 {
    if (jj_scan_token(T_Texto)) return true;
    return false;
  }

  private boolean jj_3_104()
 {
    if (jj_scan_token(T_var)) return true;
    return false;
  }

  private boolean jj_3R_34()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_104()) {
    jj_scanpos = xsp;
    if (jj_3_105()) {
    jj_scanpos = xsp;
    if (jj_3_106()) {
    jj_scanpos = xsp;
    if (jj_3_107()) {
    jj_scanpos = xsp;
    if (jj_3_108()) {
    jj_scanpos = xsp;
    if (jj_3_109()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_100()
 {
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3_88()
 {
    if (jj_3R_28()) return true;
    return false;
  }

  private boolean jj_3_102()
 {
    if (jj_scan_token(T_Coma)) return true;
    return false;
  }

  private boolean jj_3_101()
 {
    if (jj_3R_34()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_100()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_33()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_101()) {
    jj_scanpos = xsp;
    if (jj_3_102()) return true;
    }
    return false;
  }

  private boolean jj_3R_12()
 {
    if (jj_scan_token(R_tip)) return true;
    if (jj_3R_35()) return true;
    return false;
  }

  private boolean jj_3R_20()
 {
    if (jj_scan_token(T_Texto2)) return true;
    if (jj_3R_34()) return true;
    if (jj_3R_33()) return true;
    return false;
  }

  private boolean jj_3_93()
 {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_32()
 {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3_95()
 {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_31()
 {
    if (jj_scan_token(IGU)) return true;
    return false;
  }

  private boolean jj_3_94()
 {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3_99()
 {
    if (jj_scan_token(MAY)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_95()) jj_scanpos = xsp;
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_98()
 {
    if (jj_scan_token(NOR)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_94()) jj_scanpos = xsp;
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_97()
 {
    if (jj_scan_token(NOT)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3_96()
 {
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_32()) return true;
    return false;
  }

  private boolean jj_3R_30()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_96()) {
    jj_scanpos = xsp;
    if (jj_3_97()) {
    jj_scanpos = xsp;
    if (jj_3_98()) {
    jj_scanpos = xsp;
    if (jj_3_99()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3R_19()
 {
    if (jj_3R_32()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_93()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_92()
 {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3_91()
 {
    if (jj_scan_token(NOT)) return true;
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_29()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_91()) {
    jj_scanpos = xsp;
    if (jj_3_92()) return true;
    }
    return false;
  }

  private boolean jj_3_90()
 {
    if (jj_scan_token(OR)) return true;
    if (jj_3R_29()) return true;
    return false;
  }

  private boolean jj_3_89()
 {
    if (jj_scan_token(AND)) return true;
    if (jj_3R_29()) return true;
    return false;
  }

  private boolean jj_3R_28()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_89()) {
    jj_scanpos = xsp;
    if (jj_3_90()) return true;
    }
    return false;
  }

  private boolean jj_3R_18()
 {
    if (jj_3R_29()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_88()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_87()
 {
    if (jj_3R_27()) return true;
    return false;
  }

  private boolean jj_3_82()
 {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3_86()
 {
    if (jj_scan_token(PAI)) return true;
    if (jj_3R_17()) return true;
    if (jj_scan_token(PAF)) return true;
    return false;
  }

  private boolean jj_3R_26()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_86()) {
    jj_scanpos = xsp;
    if (jj_3_87()) return true;
    }
    return false;
  }

  private boolean jj_3_85()
 {
    if (jj_scan_token(MOD)) return true;
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3_84()
 {
    if (jj_scan_token(DIV)) return true;
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3_83()
 {
    if (jj_scan_token(POR)) return true;
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3R_25()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_83()) {
    jj_scanpos = xsp;
    if (jj_3_84()) {
    jj_scanpos = xsp;
    if (jj_3_85()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_79()
 {
    if (jj_3R_23()) return true;
    return false;
  }

  private boolean jj_3R_24()
 {
    if (jj_3R_26()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_82()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_81()
 {
    if (jj_scan_token(MEN)) return true;
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3_80()
 {
    if (jj_scan_token(MAS)) return true;
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3R_23()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_80()) {
    jj_scanpos = xsp;
    if (jj_3_81()) return true;
    }
    return false;
  }

  private boolean jj_3R_17()
 {
    if (jj_3R_24()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_79()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3_78()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_68()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_77()) {
    jj_scanpos = xsp;
    if (jj_3_78()) return true;
    }
    return false;
  }

  private boolean jj_3_77()
 {
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_67()
 {
    if (jj_scan_token(R_pos)) return true;
    if (jj_3R_68()) return true;
    return false;
  }

  private boolean jj_3_76()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_66()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_75()) {
    jj_scanpos = xsp;
    if (jj_3_76()) return true;
    }
    return false;
  }

  private boolean jj_3_75()
 {
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_65()
 {
    if (jj_scan_token(R_pre)) return true;
    if (jj_3R_66()) return true;
    if (jj_3R_67()) return true;
    return false;
  }

  private boolean jj_3_74()
 {
    if (jj_scan_token(FALSE)) return true;
    return false;
  }

  private boolean jj_3_73()
 {
    if (jj_scan_token(TRUE)) return true;
    return false;
  }

  private boolean jj_3R_22()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_73()) {
    jj_scanpos = xsp;
    if (jj_3_74()) return true;
    }
    return false;
  }

  private boolean jj_3_72()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_71()
 {
    if (jj_scan_token(R_repro)) return true;
    if (jj_scan_token(IGU)) return true;
    if (jj_3R_22()) return true;
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3_70()
 {
    if (jj_scan_token(R_MVID)) return true;
    if (jj_scan_token(T_MUL)) return true;
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3_69()
 {
    if (jj_scan_token(R_MAUD)) return true;
    if (jj_scan_token(T_MUL)) return true;
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3_68()
 {
    if (jj_scan_token(R_MIMG)) return true;
    if (jj_scan_token(T_MUL)) return true;
    if (jj_3R_21()) return true;
    return false;
  }

  private boolean jj_3R_21()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_68()) {
    jj_scanpos = xsp;
    if (jj_3_69()) {
    jj_scanpos = xsp;
    if (jj_3_70()) {
    jj_scanpos = xsp;
    if (jj_3_71()) {
    jj_scanpos = xsp;
    if (jj_3_72()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_64()
 {
    if (jj_scan_token(R_mul)) return true;
    if (jj_3R_21()) return true;
    if (jj_3R_65()) return true;
    return false;
  }

  private boolean jj_3_67()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_66()
 {
    if (jj_3R_17()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_65()
 {
    if (jj_scan_token(FALSE)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_63()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_64()) {
    jj_scanpos = xsp;
    if (jj_3_65()) {
    jj_scanpos = xsp;
    if (jj_3_66()) {
    jj_scanpos = xsp;
    if (jj_3_67()) return true;
    }
    }
    }
    return false;
  }

  private boolean jj_3_64()
 {
    if (jj_scan_token(TRUE)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_62()
 {
    if (jj_scan_token(R_lec)) return true;
    if (jj_3R_63()) return true;
    if (jj_3R_64()) return true;
    return false;
  }

  private boolean jj_3_63()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_61()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_62()) {
    jj_scanpos = xsp;
    if (jj_3_63()) return true;
    }
    return false;
  }

  private boolean jj_3_62()
 {
    if (jj_scan_token(T_ID)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_60()
 {
    if (jj_scan_token(R_apa)) return true;
    if (jj_3R_61()) return true;
    if (jj_3R_62()) return true;
    return false;
  }

  private boolean jj_3_61()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_59()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_60()) {
    jj_scanpos = xsp;
    if (jj_3_61()) return true;
    }
    return false;
  }

  private boolean jj_3_60()
 {
    if (jj_3R_17()) return true;
    return false;
  }

  private boolean jj_3R_58()
 {
    if (jj_scan_token(R_rep)) return true;
    if (jj_3R_59()) return true;
    if (jj_3R_60()) return true;
    return false;
  }

  private boolean jj_3_59()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3_58()
 {
    if (jj_scan_token(T_ID)) return true;
    if (jj_scan_token(PAI)) return true;
    if (jj_scan_token(PAF)) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_57()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_57()) {
    jj_scanpos = xsp;
    if (jj_3_58()) {
    jj_scanpos = xsp;
    if (jj_3_59()) return true;
    }
    }
    return false;
  }

  private boolean jj_3_57()
 {
    if (jj_3R_18()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_56()
 {
    if (jj_scan_token(R_prd)) return true;
    if (jj_3R_57()) return true;
    if (jj_3R_58()) return true;
    return false;
  }

  private boolean jj_3_56()
 {
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_55()
 {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_55()) {
    jj_scanpos = xsp;
    if (jj_3_56()) return true;
    }
    return false;
  }

  private boolean jj_3_55()
 {
    if (jj_3R_20()) return true;
    if (jj_scan_token(R_fin)) return true;
    return false;
  }

  private boolean jj_3R_54()
 {
    if (jj_scan_token(R_rqm)) return true;
    if (jj_3R_55()) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  /** Generated Token Manager. */
  public GramaticaTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[0];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[109];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public Gramatica(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Gramatica(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new GramaticaTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public Gramatica(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new GramaticaTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public Gramatica(GramaticaTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(GramaticaTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  @SuppressWarnings("serial")
  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk_f() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[96];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 0; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 96; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 109; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
            case 44: jj_3_45(); break;
            case 45: jj_3_46(); break;
            case 46: jj_3_47(); break;
            case 47: jj_3_48(); break;
            case 48: jj_3_49(); break;
            case 49: jj_3_50(); break;
            case 50: jj_3_51(); break;
            case 51: jj_3_52(); break;
            case 52: jj_3_53(); break;
            case 53: jj_3_54(); break;
            case 54: jj_3_55(); break;
            case 55: jj_3_56(); break;
            case 56: jj_3_57(); break;
            case 57: jj_3_58(); break;
            case 58: jj_3_59(); break;
            case 59: jj_3_60(); break;
            case 60: jj_3_61(); break;
            case 61: jj_3_62(); break;
            case 62: jj_3_63(); break;
            case 63: jj_3_64(); break;
            case 64: jj_3_65(); break;
            case 65: jj_3_66(); break;
            case 66: jj_3_67(); break;
            case 67: jj_3_68(); break;
            case 68: jj_3_69(); break;
            case 69: jj_3_70(); break;
            case 70: jj_3_71(); break;
            case 71: jj_3_72(); break;
            case 72: jj_3_73(); break;
            case 73: jj_3_74(); break;
            case 74: jj_3_75(); break;
            case 75: jj_3_76(); break;
            case 76: jj_3_77(); break;
            case 77: jj_3_78(); break;
            case 78: jj_3_79(); break;
            case 79: jj_3_80(); break;
            case 80: jj_3_81(); break;
            case 81: jj_3_82(); break;
            case 82: jj_3_83(); break;
            case 83: jj_3_84(); break;
            case 84: jj_3_85(); break;
            case 85: jj_3_86(); break;
            case 86: jj_3_87(); break;
            case 87: jj_3_88(); break;
            case 88: jj_3_89(); break;
            case 89: jj_3_90(); break;
            case 90: jj_3_91(); break;
            case 91: jj_3_92(); break;
            case 92: jj_3_93(); break;
            case 93: jj_3_94(); break;
            case 94: jj_3_95(); break;
            case 95: jj_3_96(); break;
            case 96: jj_3_97(); break;
            case 97: jj_3_98(); break;
            case 98: jj_3_99(); break;
            case 99: jj_3_100(); break;
            case 100: jj_3_101(); break;
            case 101: jj_3_102(); break;
            case 102: jj_3_103(); break;
            case 103: jj_3_104(); break;
            case 104: jj_3_105(); break;
            case 105: jj_3_106(); break;
            case 106: jj_3_107(); break;
            case 107: jj_3_108(); break;
            case 108: jj_3_109(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

  }
