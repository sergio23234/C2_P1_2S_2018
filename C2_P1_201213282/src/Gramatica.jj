
/*
 * Copyright © 2002 Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * California 95054, U.S.A. All rights reserved.  Sun Microsystems, Inc. has
 * intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation,
 * these intellectual property rights may include one or more of the U.S.
 * patents listed at http://www.sun.com/patents and one or more additional
 * patents or pending patent applications in the U.S. and in other countries.
 * U.S. Government Rights - Commercial software. Government users are subject
 * to the Sun Microsystems, Inc. standard license agreement and applicable
 * provisions of the FAR and its supplements.  Use is subject to license terms.
 * Sun,  Sun Microsystems,  the Sun logo and  Java are trademarks or registered
 * trademarks of Sun Microsystems, Inc. in the U.S. and other countries.  This
 * product is covered and controlled by U.S. Export Control laws and may be
 * subject to the export or import laws in other countries.  Nuclear, missile,
 * chemical biological weapons or nuclear maritime end uses or end users,
 * whether direct or indirect, are strictly prohibited.  Export or reexport
 * to countries subject to U.S. embargo or to entities identified on U.S.
 * export exclusion lists, including, but not limited to, the denied persons
 * and specially designated nationals lists is strictly prohibited.
 */


options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Gramatica)

public class Gramatica {
		NArbol Gramatica(String arg[]){ 
   		try
    {
     System.out.println("entro");
     Gramatica parser = new Gramatica(System.in);
     return parser.Inicio() ;
    }
    catch(ParseException e)
    {
      System.out.println(e.getMessage());
      System.out.println("Analizador: Se han encontrado errores en el analisis.");
      return null;
    }	  
  }
  }

}

PARSER_END(Gramatica)
SKIP:{
" "
|"\t"
|"\n"
|"\r"
}
TOKEN :{
<R_fin:"»">
<NUMERO : (<DIGITO>)+>
<R_ID:[a-Z]>
}
TOKEN :{
<R_tip:"Tipo«">
<R_idp:"idpregunta«">
<R_eti:"etiqueta«">
<R_par:"parametro«">
<R_cal:"calculo«">
<R_apl:"aplicable«">
<R_sug:"sugerir«">
<R_res:"restringir«">
<R_req:"requerido«">
<R_rsm:"restringirmsn«">
<R_rqm:"requeridomsn«">
<R_prd"predeterminado«">
<R_rep:"repeticion«">
<R_apa:"apariencia«">
<R_pre:"codigo_pre«">
<R_pos:"codigo_post«">
}
TOKEN :{
<R_Text:"Texto">
<R_Ente:"Entero">
<R_Deci:"Decimal">
<R_Rang:"Rango">
<R_Cond:"Condicion">
<R_Fech:"Fecha">
<R_Hora:"Hora">
<R_FeHo:"FechaHora">
<R_Selu:"Seleccion_uno">
<R_Selm:"Seleccion_multiples">
<R_Nota:"Nota">
<R_Mult:"Fichero">
<R_Calc:"Calcular">
<R_AgrI:"Iniciar agrupacion">
<R_AgrF:"Finalizar agrupacion">
<R_Cici:"Iniciar Ciclo">
<R_Cicf:"Finalizar Ciclo">
}
NArbol Inicio(): 
{NArbol arbol=new NArbol(); }
{
	arbol=Contenido(){return arbol;}
}
void Contenido() ://Inicio del Cuerpo Tipo
{NArbol abrbol = new NArbol();}
{
<R_tip>Cuerpo_Tipo() Est_ID() ContenidoP()
}
NArbol ContenidoP():
{NArbol arbol = new NArbol();}
{
<R_tip>Cuerpo_Tipo() Est_ID() ContenidoP()
|<EOF>
}
NArbol Cuerpo_Tipo():
{NArbol arbol = new NArbol();}
{
 <R_Text><R_fin>
|<R_Ente><R_fin>
|<R_Deci><R_fin>
|<R_Rang><R_fin>
|<R_Cond><R_fin>
|<R_Fech><R_fin>
|<R_Hora><R_fin>
|<R_FeHo><R_fin>
|<R_Selu><R_fin>
|<R_Selm><R_fin>
|<R_Nota><R_fin>
|<R_Mult><R_fin>
|<R_Calc><R_fin>
|<R_AgrI><R_fin>
|<R_AgrF><R_fin>
|<R_Cici><R_fin>
|<R_Cicf><R_fin>
|<R_fin>
}
NArbol Est_ID():
{NArbol arbol = new NArbol();}
{
<R_idp>Cuerpo_ID() Est_eti()
<R_fin>
}
String Cuerpo_ID()
{String ID = "";}
{

}
NArbol Est_eti():
{NArbol arbol = new NArbol();}
{
<R_eti><R_fin><R_par><R_fin><R_cal><R_fin><R_apl><R_fin><R_sug><R_fin><R_res><R_fin><R_req><R_fin><R_rsm><R_fin><R_rqm><R_fin><R_prd><R_fin><R_rep><R_fin><R_apa><R_fin><R_pre><R_fin><R_pos><R_fin> 
}